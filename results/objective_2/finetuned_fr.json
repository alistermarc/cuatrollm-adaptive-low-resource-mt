{
  "results": {
    "arc_fr": {
      "alias": "arc_fr",
      "acc,none": 0.3088109495295124,
      "acc_stderr,none": 0.013518339489431923,
      "acc_norm,none": 0.3781009409751925,
      "acc_norm_stderr,none": 0.014188693508089295
    },
    "hellaswag_fr": {
      "alias": "hellaswag_fr",
      "acc,none": 0.368280145641465,
      "acc_stderr,none": 0.004991691500737045,
      "acc_norm,none": 0.4593060612550867,
      "acc_norm_stderr,none": 0.005157309077700775
    },
    "paws_fr": {
      "alias": "paws_fr",
      "acc,none": 0.535,
      "acc_stderr,none": 0.011155703691943106
    },
    "truthfulqa_fr_mc1": {
      "alias": "truthfulqa_fr_mc1",
      "acc,none": 0.2782719186785261,
      "acc_stderr,none": 0.015984910901571035
    },
    "xnli_fr": {
      "alias": "xnli_fr",
      "acc,none": 0.39959839357429716,
      "acc_stderr,none": 0.00981793926795827
    }
  },
  "group_subtasks": {
    "arc_fr": [],
    "hellaswag_fr": [],
    "paws_fr": [],
    "truthfulqa_fr_mc1": [],
    "xnli_fr": []
  },
  "configs": {
    "arc_fr": {
      "task": "arc_fr",
      "tag": [
        "arc_multilingual"
      ],
      "dataset_path": "alexandrainst/m_arc",
      "dataset_name": "fr",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        # breakpoint()\n        out_doc = {\n            \"id\": doc[\"id\"],\n            \"query\": \"Question: \" + preprocess(doc[\"instruction\"]) + \"\\nAnswer:\",\n            \"choices\": [\n                preprocess(option)\n                for option in [\n                    doc[\"option_a\"],\n                    doc[\"option_b\"],\n                    doc[\"option_c\"],\n                    doc[\"option_d\"],\n                    doc[\"option_e\"],\n                ]\n                if option\n            ],\n            \"gold\": [\"A\", \"B\", \"C\", \"D\", \"E\"].index(doc[\"answer\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "query",
      "doc_to_target": "gold",
      "doc_to_choice": "choices",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "query",
      "metadata": {
        "version": 2.0
      }
    },
    "hellaswag_fr": {
      "task": "hellaswag_fr",
      "tag": [
        "hellaswag_multilingual"
      ],
      "dataset_path": "alexandrainst/m_hellaswag",
      "dataset_name": "fr",
      "validation_split": "val",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        ctx = doc[\"ctx_a\"] + \" \" + doc[\"ctx_b\"].capitalize()\n        out_doc = {\n            \"query\": preprocess(doc[\"activity_label\"] + \": \" + ctx),\n            \"choices\": [preprocess(ending) for ending in doc[\"endings\"]],\n            \"gold\": int(doc[\"label\"]),\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "query",
      "doc_to_target": "{{label.lstrip()}}",
      "doc_to_choice": "choices",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        },
        {
          "metric": "acc_norm",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "paws_fr": {
      "task": "paws_fr",
      "dataset_path": "paws-x",
      "dataset_name": "fr",
      "training_split": "train",
      "validation_split": "validation",
      "test_split": "test",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[sentence1+\", n'est-ce pas? Non, \"+sentence2, sentence1+\", n'est-ce pas? Oui, \"+sentence2]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    },
    "truthfulqa_fr_mc1": {
      "task": "truthfulqa_fr_mc1",
      "tag": [
        "truthfulqa_multilingual"
      ],
      "dataset_path": "alexandrainst/m_truthfulqa",
      "dataset_name": "fr",
      "validation_split": "val",
      "process_docs": "def process_docs(dataset: datasets.Dataset) -> datasets.Dataset:\n    def _process_doc(doc):\n        out_doc = {\n            \"question\": preprocess(doc[\"question\"]),\n            \"query\": QA_PROMPT + \"\\n\\nQ: \" + preprocess(doc[\"question\"]) + \"\\nA:\",\n            \"mc1_choices\": doc[\"mc1_targets_choices\"],\n            \"mc2_choices\": doc[\"mc2_targets_choices\"],\n            \"mc2_targets\": {\"labels\": doc[\"mc2_targets_labels\"]},\n            \"gold\": \" \",\n        }\n        return out_doc\n\n    return dataset.map(_process_doc)\n",
      "doc_to_text": "query",
      "doc_to_target": 0,
      "doc_to_choice": "mc1_choices",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": true,
      "doc_to_decontamination_query": "question",
      "metadata": {
        "version": 1.0
      }
    },
    "xnli_fr": {
      "task": "xnli_fr",
      "dataset_path": "xnli",
      "dataset_name": "fr",
      "training_split": "train",
      "validation_split": "validation",
      "doc_to_text": "",
      "doc_to_target": "label",
      "doc_to_choice": "{{[premise+\", correct? Oui, \"+hypothesis,premise+\", correct? Aussi, \"+hypothesis,premise+\", correct? Non, \"+hypothesis]}}",
      "description": "",
      "target_delimiter": " ",
      "fewshot_delimiter": "\n\n",
      "num_fewshot": 5,
      "metric_list": [
        {
          "metric": "acc",
          "aggregation": "mean",
          "higher_is_better": true
        }
      ],
      "output_type": "multiple_choice",
      "repeats": 1,
      "should_decontaminate": false,
      "metadata": {
        "version": 1.0
      }
    }
  },
  "versions": {
    "arc_fr": 2.0,
    "hellaswag_fr": 1.0,
    "paws_fr": 1.0,
    "truthfulqa_fr_mc1": 1.0,
    "xnli_fr": 1.0
  },
  "n-shot": {
    "arc_fr": 5,
    "hellaswag_fr": 5,
    "paws_fr": 5,
    "truthfulqa_fr_mc1": 5,
    "xnli_fr": 5
  },
  "higher_is_better": {
    "arc_fr": {
      "acc": true,
      "acc_norm": true
    },
    "hellaswag_fr": {
      "acc": true,
      "acc_norm": true
    },
    "paws_fr": {
      "acc": true
    },
    "truthfulqa_fr_mc1": {
      "acc": true
    },
    "xnli_fr": {
      "acc": true
    }
  },
  "n-samples": {
    "xnli_fr": {
      "original": 2490,
      "effective": 2490
    },
    "truthfulqa_fr_mc1": {
      "original": 787,
      "effective": 787
    },
    "paws_fr": {
      "original": 2000,
      "effective": 2000
    },
    "hellaswag_fr": {
      "original": 9338,
      "effective": 9338
    },
    "arc_fr": {
      "original": 1169,
      "effective": 1169
    }
  },
  "config": {
    "model": "hf",
    "model_args": "pretrained=britllm/CuatroLLM,peft=/data/students/alister/NLP_Project/britllm/CuatroLLM_spanish__/checkpoint-125",
    "model_num_parameters": 1358006272,
    "model_dtype": "torch.bfloat16",
    "model_revision": "main",
    "model_sha": "7db5429a6411aec787c092b6a9f9929b50005f97",
    "peft_sha": "",
    "batch_size": "8",
    "batch_sizes": [],
    "device": "cuda:0",
    "use_cache": null,
    "limit": null,
    "bootstrap_iters": 100000,
    "gen_kwargs": null,
    "random_seed": 0,
    "numpy_seed": 1234,
    "torch_seed": 1234,
    "fewshot_seed": 1234
  },
  "git_hash": null,
  "date": 1734935533.9253147,
  "pretty_env_info": "PyTorch version: 2.5.1+cu124\nIs debug build: False\nCUDA used to build PyTorch: 12.4\nROCM used to build PyTorch: N/A\n\nOS: Ubuntu 20.04.6 LTS (x86_64)\nGCC version: (Ubuntu 9.4.0-1ubuntu1~20.04.2) 9.4.0\nClang version: Could not collect\nCMake version: version 3.31.0\nLibc version: glibc-2.31\n\nPython version: 3.11.10 (main, Oct  3 2024, 07:29:13) [GCC 11.2.0] (64-bit runtime)\nPython platform: Linux-5.4.0-204-generic-x86_64-with-glibc2.31\nIs CUDA available: True\nCUDA runtime version: 12.4.131\nCUDA_MODULE_LOADING set to: LAZY\nGPU models and configuration: \nGPU 0: NVIDIA A100-SXM4-40GB\nGPU 1: NVIDIA A100-SXM4-40GB\nGPU 2: NVIDIA A100-SXM4-40GB\nGPU 3: NVIDIA A100-SXM4-40GB\nGPU 4: NVIDIA A100-SXM4-40GB\nGPU 5: NVIDIA A100-SXM4-40GB\nGPU 6: NVIDIA A100-SXM4-40GB\nGPU 7: NVIDIA A100-SXM4-40GB\n\nNvidia driver version: 550.127.08\ncuDNN version: Could not collect\nHIP runtime version: N/A\nMIOpen runtime version: N/A\nIs XNNPACK available: True\n\nCPU:\nArchitecture:                       x86_64\nCPU op-mode(s):                     32-bit, 64-bit\nByte Order:                         Little Endian\nAddress sizes:                      43 bits physical, 48 bits virtual\nCPU(s):                             256\nOn-line CPU(s) list:                0-255\nThread(s) per core:                 2\nCore(s) per socket:                 64\nSocket(s):                          2\nNUMA node(s):                       8\nVendor ID:                          AuthenticAMD\nCPU family:                         23\nModel:                              49\nModel name:                         AMD EPYC 7742 64-Core Processor\nStepping:                           0\nFrequency boost:                    enabled\nCPU MHz:                            3073.518\nCPU max MHz:                        2250.0000\nCPU min MHz:                        1500.0000\nBogoMIPS:                           4491.76\nVirtualization:                     AMD-V\nL1d cache:                          4 MiB\nL1i cache:                          4 MiB\nL2 cache:                           64 MiB\nL3 cache:                           512 MiB\nNUMA node0 CPU(s):                  0-15,128-143\nNUMA node1 CPU(s):                  16-31,144-159\nNUMA node2 CPU(s):                  32-47,160-175\nNUMA node3 CPU(s):                  48-63,176-191\nNUMA node4 CPU(s):                  64-79,192-207\nNUMA node5 CPU(s):                  80-95,208-223\nNUMA node6 CPU(s):                  96-111,224-239\nNUMA node7 CPU(s):                  112-127,240-255\nVulnerability Gather data sampling: Not affected\nVulnerability Itlb multihit:        Not affected\nVulnerability L1tf:                 Not affected\nVulnerability Mds:                  Not affected\nVulnerability Meltdown:             Not affected\nVulnerability Mmio stale data:      Not affected\nVulnerability Retbleed:             Vulnerable\nVulnerability Spec store bypass:    Mitigation; Speculative Store Bypass disabled via prctl and seccomp\nVulnerability Spectre v1:           Mitigation; usercopy/swapgs barriers and __user pointer sanitization\nVulnerability Spectre v2:           Mitigation; Retpolines; IBPB conditional; IBRS_FW; STIBP conditional; RSB filling; PBRSB-eIBRS Not affected; BHI Not affected\nVulnerability Srbds:                Not affected\nVulnerability Tsx async abort:      Not affected\nFlags:                              fpu vme de pse tsc msr pae mce cx8 apic sep mtrr pge mca cmov pat pse36 clflush mmx fxsr sse sse2 ht syscall nx mmxext fxsr_opt pdpe1gb rdtscp lm constant_tsc rep_good nopl nonstop_tsc cpuid extd_apicid aperfmperf pni pclmulqdq monitor ssse3 fma cx16 sse4_1 sse4_2 x2apic movbe popcnt aes xsave avx f16c rdrand lahf_lm cmp_legacy svm extapic cr8_legacy abm sse4a misalignsse 3dnowprefetch osvw ibs skinit wdt tce topoext perfctr_core perfctr_nb bpext perfctr_llc mwaitx cpb cat_l3 cdp_l3 hw_pstate ssbd mba ibrs ibpb stibp vmmcall fsgsbase bmi1 avx2 smep bmi2 cqm rdt_a rdseed adx smap clflushopt clwb sha_ni xsaveopt xsavec xgetbv1 cqm_llc cqm_occup_llc cqm_mbm_total cqm_mbm_local clzero irperf xsaveerptr wbnoinvd arat npt lbrv svm_lock nrip_save tsc_scale vmcb_clean flushbyasid decodeassists pausefilter pfthreshold avic v_vmsave_vmload vgif umip rdpid overflow_recov succor smca sme sev sev_es\n\nVersions of relevant libraries:\n[pip3] mypy-extensions==1.0.0\n[pip3] numpy==1.26.4\n[pip3] pytorch-lightning==2.4.0\n[pip3] torch==2.5.1\n[pip3] torchmetrics==0.10.3\n[pip3] triton==3.1.0\n[conda] numpy                     1.26.4                   pypi_0    pypi\n[conda] pytorch-lightning         2.4.0                    pypi_0    pypi\n[conda] torch                     2.5.1                    pypi_0    pypi\n[conda] torchmetrics              0.10.3                   pypi_0    pypi\n[conda] triton                    3.1.0                    pypi_0    pypi",
  "transformers_version": "4.46.2",
  "upper_git_hash": null,
  "tokenizer_pad_token": [
    "<unk>",
    "0"
  ],
  "tokenizer_eos_token": [
    "</s>",
    "2"
  ],
  "tokenizer_bos_token": [
    "<s>",
    "1"
  ],
  "eot_token_id": 2,
  "max_length": 2048,
  "task_hashes": {
    "xnli_fr": "75b054f3cdf50f1d29e1a49a36e19dc0fa89a88bd9e1f57853deca98d609cd34",
    "truthfulqa_fr_mc1": "db3d069d65821cb040ad18f11be5a41aab18b1120f89b0221ea07e9575223074",
    "paws_fr": "a9f628034459bf593acaedc480c3900c0710a5508e4842f5709bbbb33ee1943a",
    "hellaswag_fr": "dd71957e92dbee4f8be3baed1384f9da9d2f2c0d305227e84554c71e467cacc8",
    "arc_fr": "09f86298e439598c8e625f895283d82bc7870d3b052ee6c42425dd5ba5ad7d69"
  },
  "model_source": "hf",
  "model_name": "/data/students/alister/NLP_Project/britllm/CuatroLLM_spanish__/checkpoint-125",
  "model_name_sanitized": "__data__students__alister__NLP_Project__britllm__CuatroLLM_spanish____checkpoint-125",
  "system_instruction": null,
  "system_instruction_sha": null,
  "fewshot_as_multiturn": false,
  "chat_template": null,
  "chat_template_sha": null,
  "start_time": 278549.277516753,
  "end_time": 279614.101276976,
  "total_evaluation_time_seconds": "1064.8237602229929"
}